(()=>{const e="INTERNET_PARTY";let t=window.localStorage.getItem(e);if(!t){const b=prompt("You don't seem to have any data. Please create one by providing a password. This will not be stored.");if(!b){throw new Error("no pw")}const T=CryptoJS.AES.encrypt(JSON.stringify({}),b);window.localStorage.setItem(e,T);t={}}else{try{const b=prompt("Please enter your password");let e;if(!b){throw new Error("no pw")}else{e=CryptoJS.AES.decrypt(t,b)}if(!e){throw new Error("bad pw")}e=e.toString(CryptoJS.enc.Utf8);try{t=JSON.parse(e)}catch(e){throw new Error("bad parse")}}catch(e){console.error("Failed to parse cache");console.error(e);throw e}}let{IPNS_KEY:n,PINATA_KEY:o}=t;if(!n){const g=prompt("Please provide your access key for ipns.nofungible.cloud. This will be stored locally on your device, and encrypted by your password.");if(!g){throw new Error("No IPNS auth token")}const b=prompt("Please enter your password");if(!b){throw new Error("no pw")}n=t.IPNS_KEY=g;const T=CryptoJS.AES.encrypt(JSON.stringify(t),b);window.localStorage.setItem(e,T)}if(!o){const E=prompt("Please provide your access key for pinata.cloud. This will be stored locally on your device, and encrypted by your password.");if(!E){throw new Error("No pinata auth token")}const b=prompt("Please enter your password");if(!b){throw new Error("no pw")}o=t.PINATA_KEY=E;const T=CryptoJS.AES.encrypt(JSON.stringify(t),b);window.localStorage.setItem(e,T)}const r=t;const c=beacon.DAppClient;const s={feed:{}};const a={"sync-wallet":function(){if(s.walletAddress){d()}else{l()}},"create-new-post":function(){document.querySelector("#new-post-content").innerText="";document.querySelector("#post-container").classList.remove("hidden")},"cancel-new-post":function(){document.querySelector("#post-container").classList.add("hidden");document.querySelector("#new-post-content").innerText=""},"publish-new-post":async function(){const e=document.querySelector("#new-post-content").innerText;const t=Date.now();s.feed.posts[t]={content:e,createdAt:t};document.querySelector("#post-container").classList.add("hidden");document.querySelector("#new-post-content").innerText="";f().catch(console.error)}};i();async function i(){const e=await w();s.record=e;if(!s.record.ipfs.cid){s.feed={posts:{},interactions:{}};await f()}else{r.cid=s.record.ipfs.cid}const t=await p();if(t){s.feed=t}else{s.feed={posts:{},interactions:{}};f()}S().catch(console.error);s.wallet=new c({name:"tzAudio",eventHandlers:{ACTIVE_ACCOUNT_SET:{handler:async function(e){try{console.log("Beacon Wallet SDK initialized",e);if(e&&e.address){document.querySelector("#sync-button").innerText="UNSYNC";s.walletAddress=e.address}}catch(e){console.error(e)}}}}});document.querySelectorAll(".action-controller").forEach(t=>{t.onclick=()=>{const e=t.getAttribute("data-action");if(a[e]){a[e](t)}}});let n;o();async function o(){n&&clearTimeout(n);m().catch(console.error);await h("PUT","http://localhost:4000/api/content",{domain:"social.nofungible.tez"});n=setTimeout(o,5e3)}}function l(){return s.wallet.requestPermissions()}async function d(){await s.wallet.removeAllAccounts();s.walletAddress=null;document.querySelector("#sync-button").innerText="SYNC"}async function p(){try{return await h("GET",`https://cloudflare-ipfs.com/ipns/${s.record.ipfs.key}?ts=${Date.now()}`)}catch(e){return null}}async function u(e){const{IpfsHash:t}=await h("POST","https://api.pinata.cloud/pinning/pinJSONToIPFS",{pinataContent:e},{Authorization:"Bearer "+o});if(r.cid){h("DELETE",`https://api.pinata.cloud/pinning/unpin/${r.cid}`,null,{Authorization:"Bearer "+o}).catch(e=>{console.error("Failed to delete old content file");console.error(e)})}r.cid=t;return t}async function f(){const e=await u(s.feed);const t=new AbortController;setTimeout(()=>{t.abort()},5e3);try{await h("GET",`https://cloudflare-ipfs.com/ipfs/${e}?ts=${Date.now()}`,null,null,t.signal)}catch(e){}s.cid=e;await y(s.record.id,e);return e}async function w(){const e=await h("GET",`https://ipns.nofungible.cloud/api/record/list`,null,{Authorization:"Basic "+btoa("no:fungible"),"no-fungible-auth-token":"Bearer "+n});if(e&&e.length){return e[0]}const t=await h("POST",`https://ipns.nofungible.cloud/api/record`,{alias:"social media feed"},{Authorization:"Basic "+btoa("no:fungible"),"no-fungible-auth-token":"Bearer "+n});return t}async function y(e,t){await h("PUT",`https://ipns.nofungible.cloud/api/record/${e}`,{cid:t,localCache:true},{Authorization:"Basic "+btoa("no:fungible"),"no-fungible-auth-token":"Bearer "+n})}async function h(e,t,n,o={},r){const c=await fetch(t,Object.assign({method:e,headers:Object.assign({"Content-Type":"application/json"},o)},n?{body:JSON.stringify(n)}:{},r?{signal:r}:{}));return c.json()}async function m(){const{members:e}=await h("GET","http://localhost:4000/api/members");const t=document.querySelector("#member-list");t.innerHTML=`<br>
            <p style="text-indent: 10px;">Members:</p>
            <br>`;e.forEach(e=>{t.innerHTML+=`<div class="profile-panel">
                    <div class="pfp"></div>
                    <div class="nameplate">
                        <span class="name">${e}</span>
                    </div>
                </div>`})}async function S(){document.querySelector("#social-feed").innerHTML="";const e=await h("GET","http://localhost:4000/api/feed");e.forEach(e=>{document.querySelector("#social-feed").innerHTML+=`<div class="social-post">
                    <div class="pfp-container">
                        <div class="pfp"></div>
                    </div>
                    <div class="content-container">
                        <p class="name">${e.domain}</p>
                        <p class="address">${e.address}</p>
                        <div class="content">
                            <iframe style="width:400px; height: 400px;" srcdoc="${e.content.replace(/"/g,"'")}" sandbox seamless></iframe>
                        </div>
                    </div>
                </div>`})}})();